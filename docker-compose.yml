networks:
  my_network:

services:
  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "81:80"
    networks:
      - my_network

  app:
    build: report-request-service/sinapsereports/
    container_name: spring_app
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - kafka
    networks:
      - my_network
    volumes:
      - ./report-request-service/sinapsereports/:/app  
    

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - my_network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sinapse_reports
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_network

volumes:
  mysql_data:
