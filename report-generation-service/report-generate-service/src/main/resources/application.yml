server:
  port: 8089

spring:
  datasource:
    url: jdbc:mysql://mysql_generate:3306/sinapse_reports_generated
    username: user
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
    show-sql: true

  logging:
    level:
      org.hibernate.type.descriptor.sql: TRACE

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest

  cloud:
    function:
      definition: consumeReportRequestedEvent

    stream:
      default-binder: kafka

      bindings:
        consumeReportRequestedEvent-in-0:
          destination: report-requests
          content-type: application/json
          value-type: com.report.generation.service.report_generate_service.Domain.Entities.Report
          binder: kafka

        produceReport-out-0:
          destination: report-status-updates
          content-type: application/json
          binder: kafka

        enviarlinkdownload:
          destination: enviarlinkdownload-exchange
          content-type: application/json
          binder: rabbit

      kafka:
        binder:
          brokers: kafka:9092
          auto-create-topics: false
        consumer:
          group-id: report-generate-group
          auto-offset-reset: earliest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

      rabbit:
        binder:
          addresses: rabbitmq:5672
          username: guest
          password: guest

async:
  core-pool-size: 4
  max-pool-size: 10
  queue-capacity: 100
  thread-name-prefix: async-executor

download-service:
  url: http://localhost:8084/api/download

reports:
  storage:
    path: /app/downloads
